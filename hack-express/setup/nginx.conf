# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=10m;
    proxy_temp_path /var/tmp;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;

    upstream hack_express_upstream {
      server 192.168.58.132:44443;
      keepalive 65;
    }

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       443;

        ssl     on;
        ssl_certificate /etc/ssl/hack-express-dev.crt;
        ssl_certificate_key /etc/ssl/hack-express-dev.key;
        ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout  10m;

        server_name  hackwarz;

        if ($host = 'hackwarz' ) {
                rewrite  ^/(.*)$  https://hackwarz/$1  permanent;
        }

        location /images/\.(jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf) {
          root /hackwarz/hack-express/public;
          autoindex on;
          autoindex_exact_size off;
          access_log off;
          expires 5m;
        }
        
        location /stylesheets/\.(js|css|min\.css)$ {
          root /hackwarz/hack-express/public;
          autoindex on;
          autoindex_exact_size off;
          access_log off;
          expires 5m;
        }
        
        location /javascripts/\.(js|css|min\.css)$ {
          root /hackwarz/hack-express/public;
          autoindex on;
          autoindex_exact_size off;
          access_log off;
          expires 5m;
        }
        
        location / {
          proxy_redirect off;
          proxy_set_header   Host                 $http_host;
          proxy_set_header   X-Real-IP            $remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme; #https
          
          proxy_set_header   X-NginX-Proxy    true;
          proxy_set_header   Connection "";
          proxy_http_version 1.1;
          proxy_cache one;
          proxy_cache_key sfs$request_uri$scheme;
          proxy_pass         https://hack_express_upstream;
          autoindex on;
          autoindex_exact_size off;
        }

        #location /errors {
        #  internal;
        #  alias /home/hackadmin/Documents/repos/hackwarz/hack-express/public/errors;
        #}

        # redirect server error pages to the static page /40x.html
        #
        #error_page  404              /404.html;
        #location = /40x.html {
        #    root   /usr/share/nginx/html;
        #}

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   /usr/share/nginx/html;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
